{"ast":null,"code":"// utils\n\nimport { vowels, nouns, adjectives } from './sample.js';\nlet random;\nexport const setRandom = newRandom => {\n  random = newRandom;\n};\nsetRandom(Math.random);\nexport const randfloat = () => random();\nexport const randint = (min, max) => {\n  const offset = min;\n  const range = max - min + 1;\n  return Math.floor(randfloat() * range) + offset;\n};\nexport const rand = a => {\n  let w;\n  while (!w) {\n    w = a[randint(0, a.length - 1)];\n  }\n  return w;\n};\nexport const pickLastPunc = () => {\n  const a = '.......!?!?;...'.split('');\n  return rand(a);\n};\nexport const pluralize = word => {\n  if (word.endsWith('s')) {\n    return word;\n  }\n  if (word.match(/(ss|ish|ch|x|us)$/)) {\n    word += 'e';\n  } else if (word.endsWith('y') && !vowels.includes(word.charAt(word.length - 2))) {\n    word = word.slice(0, word.length - 1);\n    word += 'ie';\n  }\n  return word + 's';\n};\nexport const normalize = word => {\n  let a = 'a';\n  if (word.match(/^(a|e|heir|herb|hour|i|o)/)) {\n    a = 'an';\n  }\n  return `${a} ${word}`;\n};\nexport const generator = {\n  noun: () => {\n    return rand(nouns);\n  },\n  a_noun: () => {\n    return normalize(rand(nouns));\n  },\n  nouns: () => {\n    return pluralize(rand(nouns));\n  },\n  adjective: () => {\n    return rand(adjectives);\n  },\n  an_adjective: () => {\n    return normalize(rand(adjectives));\n  }\n};","map":{"version":3,"names":["vowels","nouns","adjectives","random","setRandom","newRandom","Math","randfloat","randint","min","max","offset","range","floor","rand","a","w","length","pickLastPunc","split","pluralize","word","endsWith","match","includes","charAt","slice","normalize","generator","noun","a_noun","adjective","an_adjective"],"sources":["C:/Users/DELL/Desktop/Archive/node_modules/txtgen/src/util.js"],"sourcesContent":["// utils\n\nimport {\n  vowels,\n  nouns,\n  adjectives\n} from './sample.js'\n\nlet random\n\nexport const setRandom = (newRandom) => {\n  random = newRandom\n}\n\nsetRandom(Math.random)\n\nexport const randfloat = () => random()\n\nexport const randint = (min, max) => {\n  const offset = min\n  const range = max - min + 1\n  return Math.floor(randfloat() * range) + offset\n}\n\nexport const rand = (a) => {\n  let w\n  while (!w) {\n    w = a[randint(0, a.length - 1)]\n  }\n  return w\n}\n\nexport const pickLastPunc = () => {\n  const a = '.......!?!?;...'.split('')\n  return rand(a)\n}\n\nexport const pluralize = (word) => {\n  if (word.endsWith('s')) {\n    return word\n  }\n  if (word.match(/(ss|ish|ch|x|us)$/)) {\n    word += 'e'\n  } else if (word.endsWith('y') && !vowels.includes(word.charAt(word.length - 2))) {\n    word = word.slice(0, word.length - 1)\n    word += 'ie'\n  }\n  return word + 's'\n}\n\nexport const normalize = (word) => {\n  let a = 'a'\n  if (word.match(/^(a|e|heir|herb|hour|i|o)/)) {\n    a = 'an'\n  }\n  return `${a} ${word}`\n}\n\nexport const generator = {\n  noun: () => {\n    return rand(nouns)\n  },\n  a_noun: () => {\n    return normalize(rand(nouns))\n  },\n  nouns: () => {\n    return pluralize(rand(nouns))\n  },\n  adjective: () => {\n    return rand(adjectives)\n  },\n  an_adjective: () => {\n    return normalize(rand(adjectives))\n  },\n}\n"],"mappings":"AAAA;;AAEA,SACEA,MAAM,EACNC,KAAK,EACLC,UAAU,QACL,aAAa;AAEpB,IAAIC,MAAM;AAEV,OAAO,MAAMC,SAAS,GAAIC,SAAS,IAAK;EACtCF,MAAM,GAAGE,SAAS;AACpB,CAAC;AAEDD,SAAS,CAACE,IAAI,CAACH,MAAM,CAAC;AAEtB,OAAO,MAAMI,SAAS,GAAGA,CAAA,KAAMJ,MAAM,CAAC,CAAC;AAEvC,OAAO,MAAMK,OAAO,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;EACnC,MAAMC,MAAM,GAAGF,GAAG;EAClB,MAAMG,KAAK,GAAGF,GAAG,GAAGD,GAAG,GAAG,CAAC;EAC3B,OAAOH,IAAI,CAACO,KAAK,CAACN,SAAS,CAAC,CAAC,GAAGK,KAAK,CAAC,GAAGD,MAAM;AACjD,CAAC;AAED,OAAO,MAAMG,IAAI,GAAIC,CAAC,IAAK;EACzB,IAAIC,CAAC;EACL,OAAO,CAACA,CAAC,EAAE;IACTA,CAAC,GAAGD,CAAC,CAACP,OAAO,CAAC,CAAC,EAAEO,CAAC,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC;EACjC;EACA,OAAOD,CAAC;AACV,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAMH,CAAC,GAAG,iBAAiB,CAACI,KAAK,CAAC,EAAE,CAAC;EACrC,OAAOL,IAAI,CAACC,CAAC,CAAC;AAChB,CAAC;AAED,OAAO,MAAMK,SAAS,GAAIC,IAAI,IAAK;EACjC,IAAIA,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtB,OAAOD,IAAI;EACb;EACA,IAAIA,IAAI,CAACE,KAAK,CAAC,mBAAmB,CAAC,EAAE;IACnCF,IAAI,IAAI,GAAG;EACb,CAAC,MAAM,IAAIA,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACtB,MAAM,CAACwB,QAAQ,CAACH,IAAI,CAACI,MAAM,CAACJ,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;IAC/EI,IAAI,GAAGA,IAAI,CAACK,KAAK,CAAC,CAAC,EAAEL,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAC;IACrCI,IAAI,IAAI,IAAI;EACd;EACA,OAAOA,IAAI,GAAG,GAAG;AACnB,CAAC;AAED,OAAO,MAAMM,SAAS,GAAIN,IAAI,IAAK;EACjC,IAAIN,CAAC,GAAG,GAAG;EACX,IAAIM,IAAI,CAACE,KAAK,CAAC,2BAA2B,CAAC,EAAE;IAC3CR,CAAC,GAAG,IAAI;EACV;EACA,OAAQ,GAAEA,CAAE,IAAGM,IAAK,EAAC;AACvB,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG;EACvBC,IAAI,EAAEA,CAAA,KAAM;IACV,OAAOf,IAAI,CAACb,KAAK,CAAC;EACpB,CAAC;EACD6B,MAAM,EAAEA,CAAA,KAAM;IACZ,OAAOH,SAAS,CAACb,IAAI,CAACb,KAAK,CAAC,CAAC;EAC/B,CAAC;EACDA,KAAK,EAAEA,CAAA,KAAM;IACX,OAAOmB,SAAS,CAACN,IAAI,CAACb,KAAK,CAAC,CAAC;EAC/B,CAAC;EACD8B,SAAS,EAAEA,CAAA,KAAM;IACf,OAAOjB,IAAI,CAACZ,UAAU,CAAC;EACzB,CAAC;EACD8B,YAAY,EAAEA,CAAA,KAAM;IAClB,OAAOL,SAAS,CAACb,IAAI,CAACZ,UAAU,CAAC,CAAC;EACpC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}